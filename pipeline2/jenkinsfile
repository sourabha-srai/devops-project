pipeline {
    agent any

    environment {
        DOCKER_HUB_USER = 'sourabhashettypapt666'
        DOCKER_HUB_REGISTRY = 'devproject'
    }

    stages {
        stage('Pull WAR file from bucket') {
            steps {
                script {
                    sh 'gsutil cp -r gs://p3bucket/*.war /var/lib/jenkins/jobs/pipeline2/workspace/'
                }
            }
        }

        stage('Clone GitHub repository-Dockerfile') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'githublogin', usernameVariable: 'GIT_USERNAME', passwordVariable: 'GIT_PASSWORD')]) {
                    script {
                        git credentialsId: 'githublogin', url: 'https://github.com/sourabha-srai/devops-project.git', branch: 'main'
                    }
                }
            }
        }

        stage('Build Docker image') {
            steps {
                script {
                    // Make sure Docker is installed on the Jenkins agent
                    // Check if there are running containers before attempting to stop them
                    def runningContainers = sh(script: 'docker ps -q', returnStdout: true).trim()
                    
                    if (runningContainers) {
                        sh "docker stop \$(docker ps -a -q) && docker container prune -f"
                    }
        
                    sh "docker image prune -f"
                    sh "docker build -t ${DOCKER_HUB_USER}/${DOCKER_HUB_REGISTRY}:${BUILD_NUMBER} ."
                }
            }
        }

        stage('Push Docker image to DockerHub') {
            steps {
                script {
                    echo "Push Docker Image"
                    withCredentials([string(credentialsId: 'dockerhub', variable: 'DOCKERHUB_PASSWORD')]) {
                        sh "docker login -u ${DOCKER_HUB_USER} -p ${DOCKERHUB_PASSWORD}"
                        sh "docker push ${DOCKER_HUB_USER}/${DOCKER_HUB_REGISTRY}:${BUILD_NUMBER}"
                        sh "docker run -p 8086:8080 -d ${DOCKER_HUB_USER}/${DOCKER_HUB_REGISTRY}:${BUILD_NUMBER}"
                    }  
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline succeeded!  Docker image is pushed to Docker Hub.'
        }
        failure {
            echo 'Pipeline failed! Check the logs for details.'
        }
    }
}
